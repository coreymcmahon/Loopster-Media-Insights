<?php

/**
 * BaseMessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $fan_count_id
 * @property integer $facebook_page_id
 * @property string $message
 * @property FacebookPage $FacebookPage
 * @property FanCount $FanCount
 * 
 * @method integer      getFanCountId()       Returns the current record's "fan_count_id" value
 * @method integer      getFacebookPageId()   Returns the current record's "facebook_page_id" value
 * @method string       getMessage()          Returns the current record's "message" value
 * @method FacebookPage getFacebookPage()     Returns the current record's "FacebookPage" value
 * @method FanCount     getFanCount()         Returns the current record's "FanCount" value
 * @method Message      setFanCountId()       Sets the current record's "fan_count_id" value
 * @method Message      setFacebookPageId()   Sets the current record's "facebook_page_id" value
 * @method Message      setMessage()          Sets the current record's "message" value
 * @method Message      setFacebookPage()     Sets the current record's "FacebookPage" value
 * @method Message      setFanCount()         Sets the current record's "FanCount" value
 * 
 * @package    insights
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMessage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('message');
        $this->hasColumn('fan_count_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('facebook_page_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('message', 'string', 1023, array(
             'type' => 'string',
             'length' => 1023,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('FacebookPage', array(
             'local' => 'facebook_page_id',
             'foreign' => 'id',
             'onDelete' => 'NO ACTION'));

        $this->hasOne('FanCount', array(
             'local' => 'fan_count_id',
             'foreign' => 'id',
             'onDelete' => 'NO ACTION'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}